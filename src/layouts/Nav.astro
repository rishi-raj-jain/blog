---
import { config } from "@/config/global";
---

<nav id="site-nav" class="flex gap-4 mt-4 flex-wrap lg:mt-0">
  {
    config.navs.map((nav) => (
      <a
        href={nav.url}
        class="hover:text-primary duration-300 decoration-primary decoration-wavy underline-offset-8 self-end"
      >
        {nav.title}
      </a>
    ))
  }
  <svg
    id="light-icon"
    viewBox="0 0 24 24"
    data-theme="light"
    xmlns="http://www.w3.org/2000/svg"
    class="theme-icon hidden w-5 h-6 self-end cursor-pointer fill-dark-2"
  >
    <path
      d="M12 18C8.68629 18 6 15.3137 6 12C6 8.68629 8.68629 6 12 6C15.3137 6 18 8.68629 18 12C18 15.3137 15.3137 18 12 18ZM12 16C14.2091 16 16 14.2091 16 12C16 9.79086 14.2091 8 12 8C9.79086 8 8 9.79086 8 12C8 14.2091 9.79086 16 12 16ZM11 1H13V4H11V1ZM11 20H13V23H11V20ZM3.51472 4.92893L4.92893 3.51472L7.05025 5.63604L5.63604 7.05025L3.51472 4.92893ZM16.9497 18.364L18.364 16.9497L20.4853 19.0711L19.0711 20.4853L16.9497 18.364ZM19.0711 3.51472L20.4853 4.92893L18.364 7.05025L16.9497 5.63604L19.0711 3.51472ZM5.63604 16.9497L7.05025 18.364L4.92893 20.4853L3.51472 19.0711L5.63604 16.9497ZM23 11V13H20V11H23ZM4 11V13H1V11H4Z"
    >
    </path>
  </svg>
  <svg
    id="dark-icon"
    data-theme="dark"
    viewBox="0 0 24 24"
    xmlns="http://www.w3.org/2000/svg"
    class="theme-icon hidden w-5 h-6 self-end cursor-pointer"
  >
    <path
      d="M12 21.9967C6.47715 21.9967 2 17.5196 2 11.9967C2 6.47386 6.47715 1.9967 12 1.9967C17.5228 1.9967 22 6.47386 22 11.9967C22 17.5196 17.5228 21.9967 12 21.9967ZM12 19.9967C16.4183 19.9967 20 16.415 20 11.9967C20 7.57843 16.4183 3.9967 12 3.9967C7.58172 3.9967 4 7.57843 4 11.9967C4 16.415 7.58172 19.9967 12 19.9967ZM7.00035 15.316C9.07995 15.1646 11.117 14.2939 12.7071 12.7038C14.2972 11.1137 15.1679 9.07666 15.3193 6.99706C15.6454 7.21408 15.955 7.46642 16.2426 7.75406C18.5858 10.0972 18.5858 13.8962 16.2426 16.2393C13.8995 18.5825 10.1005 18.5825 7.75736 16.2393C7.46971 15.9517 7.21738 15.6421 7.00035 15.316Z"
    >
    </path>
  </svg>
  <a href="/search" class="self-end">
    <svg
      class="w-5 h-6 dark:fill-dark-2"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M18.031 16.6168L22.3137 20.8995L20.8995 22.3137L16.6168 18.031C15.0769 19.263 13.124 20 11 20C6.032 20 2 15.968 2 11C2 6.032 6.032 2 11 2C15.968 2 20 6.032 20 11C20 13.124 19.263 15.0769 18.031 16.6168ZM16.0247 15.8748C17.2475 14.6146 18 12.8956 18 11C18 7.1325 14.8675 4 11 4C7.1325 4 4 7.1325 4 11C4 14.8675 7.1325 18 11 18C12.8956 18 14.6146 17.2475 15.8748 16.0247L16.0247 15.8748Z"
      >
      </path>
    </svg>
  </a>
</nav>

<script>
  document.addEventListener("visibilitychange", () => {
    if (document.visibilityState === "hidden") return;
    const theme = getInitialTheme();
    setTheme(theme);
    toggleThemeIcon(theme);
  });

  document.addEventListener("astro:page-load", () => {
    setActiveClass();
    addEventListenerForThemeIcon();
    toggleThemeIcon(getInitialTheme());
    setTheme(getInitialTheme());
  });

  function getInitialTheme(): "light" | "dark" {
    const theme = window.localStorage.getItem("theme") as
      | "light"
      | "dark"
      | null;
    if (theme) {
      return theme;
    }

    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }

    return "light";
  }

  function setTheme(theme: "light" | "dark") {
    if (theme === "dark") {
      document.documentElement.classList.add("dark");
    } else {
      document.documentElement.classList.remove("dark");
    }
  }

  function addEventListenerForThemeIcon() {
    document.querySelectorAll(".theme-icon").forEach((svg) => {
      const icon = svg as SVGElement;
      icon.addEventListener("click", () => {
        const theme = icon.dataset.theme as "light" | "dark";
        setTheme(theme);
        toggleThemeIcon(theme, true);
      });
    });
  }

  function toggleThemeIcon(theme: "light" | "dark", shouldCache?: boolean) {
    const darkIcon = document.getElementById("dark-icon");
    const lightIcon = document.getElementById("light-icon");

    if (darkIcon === null || lightIcon === null) return;

    if (shouldCache) {
      window.localStorage.setItem("theme", theme);
    }

    if (theme === "light") {
      lightIcon.classList.add("hidden");
      darkIcon.classList.remove("hidden");
    } else {
      darkIcon.classList.add("hidden");
      lightIcon.classList.remove("hidden");
    }
  }

  function setActiveClass() {
    const nav = getNavFromUrl();
    const navs = document.querySelectorAll("#site-nav a");
    navs.forEach((n) => {
      if (n.getAttribute("href") === nav) {
        n.classList.add("underline");
      }
    });
  }

  function getNavFromUrl() {
    const nav = window.location.pathname.split("/")[1];
    return "/" + nav;
  }
</script>
